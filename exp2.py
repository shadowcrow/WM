from psychopy import visual, core, gui, event, data
from psychopy.tools.filetools import fromFile, toFile
from random import sample
import pdb
from itertools import product, chain, islice
import csv
from set import setcol
expInfo = {'ID': '', 'age': '', 'gender': ['Male', 'Female'], 'block': ''}
#dlg = gui.DlgFromDict(dictionary=expInfo, title='VWM Task', order=['ID', 'age', 'block'])
#if dlg.OK:
#    toFile('lastParams.pickle', expInfo)  # save params to file for next time
#else:
#    core.quit()  # the user hit "cancel" so exit
dataName = open("%s.csv" % (expInfo['ID'] + '_' + expInfo['age'] + '_' + expInfo['block']), 'a')

stimList = data.importConditions('vwm.csv', returnFieldNames=True, selection='1:8')
print(stimList[6])
exp = data.ExperimentHandler(name='test', version='0.1', extraInfo=expInfo,
                             runtimeInfo=None, originPath=None, savePickle=True,
                             saveWideText=True, dataFileName='dataName')
#print(stimList)
WIN = visual.Window((1366, 800), color="grey", units="pix", fullscr=False)
FIX = visual.TextStim(WIN, text='+', height=120, color='white', pos=(0, 0))
FEEDBACK_O = visual.TextStim(WIN, pos=(0, 4), height=30, text='CORRECT!', color='white')
FEEDBACK_X = visual.TextStim(WIN, pos=(0, 4), height=30, text='INCORRECT!', color='white')
phase = visual.TextStim(WIN, text='End of practice block.\nPress the "Space" key to continue.', pos=(0, 6), height=0.8)
instr = visual.TextStim(WIN,
                        text='Remmber position and color,\nif color belong same frame, press "Left",otherwise color belong diifent frame, press"Right".\n Press "space" to continue.',
                        pos=(0, 4), height=0.8)
practice = visual.TextStim(WIN,
                           text='This is the practice block.\n''Make judgment if color appear belong same frame.Press "Left",/n color appears in different frame, please press "Right".''Now press the "Space" key to start practice block.',
                           pos=(0, -2), height=0.8)

BLOCKBREAK = visual.TextStim(WIN,
                             text='End of this Block,Please take a rest./nIf you are ready press the "Space" key to continue next block.',
                             pos=(0, -2), height=0.8)
HALF = visual.TextStim(WIN, text='Finish half part of experiment./nTake a break, Press"Space" to continue. ',
                       pos=(0, -2), height=0.8)
#value import by csv
CSI2 = []#5,2,2,2,2,5,0.3,5,2,5,2,5,2,5,5,5,2,0.3,2,0.3,2,2,2,2,0.3,5,0.3,2,2,2,0.3,0.3,5,5,0.3,0.3,0.3,2,5,2,0.3,0.3,2,5,0.3,5,0.3,0.3,2,5,2,5,0.3,2,5,2,2,0.3,2,5,5,2,0.3,5,5,5,5,5,0.3,2,5,2,2,0.3,0.3,2,2,0.3,5,2,0.3,5,5,5,2,2,5,5,0.3,5,2,5,5,5,0.3,5,0.3,2,5,0.3,5,2,2,5,2,2,2,0.3,5,2,2,2,0.3,2,5,5,5,2,2,2,5,2,0.3,0.3,5,0.3,0.3,0.3,2,2,2,2,0.3,5,2,2,2,0.3,0.3,0.3,0.3,0.3,5,2,2,2,0.3,0.3,5,2,5,5,5,2,0.3,5,5,5,5,5,0.3,5,2,2,0.3,0.3,5,2,5,0.3,0.3,5,0.3,5,5,2,0.3,2,2,5,2,2,5,0.3,5,5,0.3,2,5,0.3,5,5,5,5,2,0.3,5,0.3,5,0.3,2,2,2,5,0.3,2,0.3,0.3,5,0.3,0.3,5,0.3,0.3,5,2,5,0.3,2,5,5,2,2,0.3,0.3,0.3,5,0.3,5,2,5,2,0.3,5,2,2,0.3,0.3,5,2,5,0.3,0.3,5,5,2,2,5,0.3,2,5,0.3,0.3,2,2,0.3,5,5,2,5,2,5,5,0.3,2,5,0.3,2,5,5,2,5,0.3,2,2,0.3,0.3,0.3,0.3,0.3,0.3,5,0.3,0.3,0.3,2,2,2,5,0.3,2,2,0.3,0.3,5,5,5,2,5,5,0.3,2,5,5,5,0.3,5,5,5,2,2,2,2,5,0.3,2,0.3,0.3,2,5,0.3,0.3,0.3,2,0.3,0.3,0.3,2,0.3,5,5,5,2,5,2,5,0.3,5,0.3,5,2,5,0.3,0.3,2,0.3,5,2,5,5,0.3,5,2,0.3,0.3,5,5,5,2,0.3,0.3,5,5,5,2,2,5,5,0.3,2,2,0.3,2,0.3,2,0.3,2,2,5,0.3,5,2,5,5,0.3,5,0.3,0.3,5,2,2,2,2,0.3,5,5,5,0.3,0.3,0.3,2,0.3,2,2,5,0.3,2,0.3,0.3,0.3,2,0.3,0.3,5,5,5,2,0.3,5,5,0.3,2,0.3,2,0.3,2,0.3,2,2,0.3,2,2,5,5,0.3,5,2,0.3,0.3,0.3,5,0.3,0.3,0.3,2,0.3,0.3,0.3,0.3,5,0.3,0.3,5,2,2,0.3,2,2,0.3,5,2,0.3,2,0.3,2,0.3,2,2,0.3,2,0.3,2,5,0.3,5,0.3,5,0.3,0.3,2,0.3,5,2,0.3,0.3,0.3,0.3,5,2,0.3,0.3,0.3,5,5,2,5,5,0.3,5,0.3,2,2,5,5,2,2,0.3,0.3,2,5,0.3,0.3,2,0.3,2,2,5,2,5,2,2,5,0.3,2,5,2,0.3,5,5,0.3,5,5,5,5,5,2,5,2,2,0.3,5,0.3,0.3,5,2,0.3,5,2,2,2,2,0.3,5,2,2,5,5,0.3,5,5,2,5,0.3,5,5,2,2,0.3,0.3,0.3,0.3,2,2,5,0.3,5,5,0.3,2,2,2,5,2,0.3,2,2,2,2,0.3,2,5,5,2,2,5,5,0.3,5,2,0.3,5,5,0.3,5,0.3,5,0.3,0.3,2,0.3,2,5,0.3,2,5,2,0.3,0.3,2,0.3,0.3,0.3,0.3,2,2,0.3,5,0.3,2,2,5,5,2,0.3,2,0.3,2,5,2,0.3,2,5,2,0.3,5,5,5,2,0.3,2,2,2,2,0.3,0.3,0.3,2,5,2,0.3,0.3,5,5,5,5,0.3,5,5,2,2,5,5,5,2,5,5,0.3,2,5,5,5,2,5,5,2,2,0.3,0.3,2,2,2,2,5,5,5,2,2,2,2,5,0.3,5,5,2,5,5,0.3,0.3,2,5,5,0.3,0.3,0.3,5,2,5,2,2,5,5,0.3,2,2,0.3,0.3,5,2,5,0.3,5,5,0.3,2,0.3,2,2,0.3,2,2,5,2,5,0.3,5,5,0.3,2,0.3,2,0.3,5,5,0.3,2,5,0.3,2,0.3,2,2,2,2,2,5,5,0.3,0.3,2,0.3,2,0.3,2,5,0.3,5,2,2,2,0.3,0.3,2,2,5,5,0.3,2,0.3,5,2,5,2,5,2,2,2,5,2,5,5,2,2,5,5,5,0.3,5,0.3,2,5,5,0.3,5,2,5,5,5,2,2,0.3,0.3,5,0.3,0.3,0.3,0.3,2,5,5,2,2,0.3,0.3,5,5,2,2,0.3,2,0.3,5,5,2,0.3,0.3,0.3,5,0.3,2,0.3,2,5,2,0.3,0.3,0.3,2,5,2,2,5,2,5,5,2,5,2,0.3,0.3,2,2,0.3,2,0.3,0.3,2,2,0.3,0.3,2,2,2,5,0.3,2,0.3,0.3,0.3,2,5,0.3,5,5,2,0.3,2,2,5,2,5,5,0.3,5,0.3,0.3,5,5,0.3,5,2,2,2,2,0.3,5,2,2,0.3,5,0.3,5,0.3,0.3,5,0.3,2,5,5,0.3,0.3,2,5,5,5,2,0.3,2,5,0.3,5,0.3,0.3,2,0.3,2,2,5,2,0.3,5,0.3,0.3,5,0.3,0.3,2,2,5,2,2,2,2,0.3,2,0.3,5,0.3,2,2,0.3,2,5,0.3,0.3,5,0.3,2,0.3,5,0.3,0.3,5,2,5,0.3,5,0.3,0.3,5,0.3,2,2,0.3,2,0.3,5,0.3,0.3,2,5,0.3,5,0.3,2,5,0.3,2,0.3,5,0.3,2,0.3,0.3,0.3,5,0.3,2,5,0.3,5,5,5,0.3,5,5,2,0.3,2,0.3,5,5,0.3,5,2,5,5,5,0.3,2,5,2,5,5,0.3,5,5,5,0.3,5,5,2,5,2,0.3,0.3,0.3,5,5,2,0.3,2,2,2,0.3,0.3,2,5,2,0.3,0.3,2,5,5,0.3,5,0.3,5,0.3,0.3,0.3,0.3,2,2,0.3,5,0.3,5,0.3,2,2,0.3,5,2,2,2,5,2,5,5,2,2,5,2,2,5,0.3,5,5,0.3,0.3,2,5,0.3,0.3,2,5,2,5,2,5,5,2,2,0.3,5,0.3,5,5,0.3,5,0.3,5,2,0.3,2,2,0.3,2,0.3,2,0.3,5,0.3,0.3,5,0.3,0.3,0.3,0.3,2,5,0.3,5,0.3,5,2,2,5,5,0.3,5,5,0.3,2,5,2,0.3,2,2,0.3,0.3,2,5,0.3,2,5,2,5,0.3,2,0.3,0.3,2,0.3,2,0.3,2,2,2,2,2,5,2,5,0.3,5,2,5,5,5,0.3,5,0.3,0.3,0.3,0.3,0.3,0.3,5,5,5,0.3,5,0.3,2,5,5,0.3,2,0.3,5,2,0.3,2,5,0.3,2,2,0.3,5,0.3,2,2,5,2,0.3,2,5,0.3,5,0.3,5,5,5,5,0.3,5,2,2,5,2,5,2,5,2,5,0.3,0.3,0.3,2,0.3,5,5,2,0.3,5,5,5,5,2,2,2,2,5,5,2,0.3,2,2,0.3,0.3,0.3,2,0.3,5,5,5,0.3,2,5,0.3,0.3,0.3,5,0.3,0.3,2,0.3,2,2,2,2,0.3,0.3,0.3,5,5,0.3,0.3,5,5,0.3,0.3,5,5,2,0.3,2,2,2,2,0.3,0.3,2,2,2,2,2,0.3,0.3,5,0.3,2,5,2,0.3,0.3,2,2,2,2,5,0.3,0.3,0.3,2,2,5,0.3,0.3,0.3,2,0.3,0.3,0.3,2,0.3,5,0.3,2,2,0.3,5,2,0.3,5,0.3,2,0.3,5,5,0.3,2,2,5,0.3,2,5,2,5,0.3,2,2,5,0.3,2,0.3,0.3,2,2,5,5,2,5,0.3,0.3,0.3,2,0.3,0.3,2,0.3,2,0.3,0.3,0.3,5,2,5,2,5,5,0.3,2,5,2,5,2,2,0.3,0.3,0.3,5,2,2,5,5,2,0.3,2,2,2,0.3,2,0.3,0.3,0.3,0.3,2,2,5,5,0.3,2,5,5,0.3,5,2,0.3,5,2,2,0.3,5,0.3,0.3,2,2,2,0.3,5,5,5,2,2,2,0.3,2,0.3,5,5,2,2,2,2,0.3,5,2,2,2,0.3,0.3,5,2,5,5,2,0.3,0.3,2,0.3,2,2,0.3,2,0.3,5,2,2,2,2,2,2,2,0.3,2,5,2,5,0.3,0.3,0.3,5,5,2,2,2,2,0.3,5,2,2,0.3,0.3,2,2,2,5,5,0.3,5,5,2,2,5,0.3,0.3,5,5,0.3,0.3,0.3,5,0.3,5,2,2,0.3,0.3,0.3,5,5,5,2,0.3,2,0.3,2,0.3,0.3,0.3,2,2,2,5,5,5,5,5,2,5,0.3,5,0.3,5,0.3,5,2,2,2,2,2,0.3,5,5,5,0.3,2,2,0.3,5,0.3,2,0.3,5,5,5,0.3,2,2,5,2,2,5,0.3,2,2,5,0.3,5,0.3,0.3,0.3,5,5,2,2,2,5,0.3,5,2,0.3,5,2,5,5,5,5,0.3,5,2,5,2,0.3,2,2,0.3,0.3,2,2,5,2,2,5,2,5,5,5,0.3,5,2,0.3,0.3,5,2,0.3,2,0.3,0.3,5,0.3,5,5,5,0.3,5,2,0.3,5,0.3,5,2,5,5,5,5,5,0.3,5,2,5,2,0.3,5,2,0.3,5,0.3,2,5,0.3,2,2,5,0.3,0.3,5,5,2,0.3,0.3,0.3,0.3,2,2,5,2,2,2,2,2,5,0.3,5,0.3,0.3,2,0.3,5,2,0.3,0.3,0.3,2,2,5,0.3,0.3,2,2,5,0.3,0.3,2,0.3,2,2,5,5,5,5,0.3,5,5,5,2,0.3,0.3,0.3,2,2,0.3,5,2,5,0.3,5,5,5,2,5,0.3,0.3,0.3,5,5,2,2,0.3,5,5,5,5,2,5,5,2,5,2,0.3,0.3,2,5,2,5,5,0.3,2,2,5,0.3,0.3,5,5,0.3,5,5,5,0.3,0.3,5,5,0.3,0.3,5,2,0.3,5,5,2,0.3,0.3,2,2,2,5,5,2,0.3,5,0.3,5,2,0.3,5,5,5,0.3,0.3,2,0.3,0.3,0.3,2,2,0.3,0.3,0.3,2,5,5,2,0.3,2,2,0.3,2,2,2,0.3,0.3,5,0.3,2,2,0.3,0.3,0.3,0.3,0.3,5,2,2,0.3,5,0.3,5,5,2,5,2,2,2,2,5,5,2,2,0.3,0.3,5,5,2,0.3,5,5,0.3,5,2,5,0.3,0.3,5,0.3,0.3,2,5,0.3,0.3,2,5,0.3,5,2,2,2,0.3,5,0.3,5,0.3,0.3,2,2,0.3,5,5,5,5,0.3,5,0.3,0.3,5,5,0.3,5,5,2,0.3,2,0.3,0.3,0.3,2,5,0.3,5,0.3,2,5,0.3,5,5,5,2,2,2,2,2,2,0.3,5,2,0.3,0.3,0.3,2,5,2,2,0.3,0.3,0.3,5,0.3,5,2,0.3,2,0.3,0.3,5,2,5,5,0.3,2,0.3,0.3,2,0.3,2,0.3,2,0.3,2,5,2,5,5,5,5,0.3,5,5,2,0.3,2,5,2,5,5,5,5,0.3,5,5,2,2,0.3,2,5,5,0.3,5,0.3,5,0.3,0.3,5,0.3,2,2,0.3,5,2,0.3,0.3,2,5,5,5,2,5,0.3,0.3,0.3,5,0.3,0.3,2,2,2,5,5,5,2,2,2,5,0.3,5,0.3,5,2,5,2,5,0.3,2,5,5,2,0.3,5,5,5,2,0.3,0.3,0.3,0.3,5,5,0.3,2,2,2,2,5,0.3,5,2,5,0.3,2,5,5,2,5,2,0.3,0.3,5,0.3,2,2,2,2,5,2,2,5,2,0.3,0.3,0.3,0.3,0.3,2,0.3,5,5,5,0.3,5,2,0.3,2,2,5,0.3,5,2,0.3,0.3,5,0.3,5,2,0.3,0.3,0.3,2,2,0.3,0.3,5,2,2,5,2,0.3,0.3,2,5,5,2,5,2,2,0.3,2,2,5,5,5,2,0.3,0.3,5,5,0.3,0.3,5,0.3,5,0.3,0.3,5,0.3,5,2,0.3,2,5,5,5,5,5,0.3,2,2,2,0.3,2,5,0.3,5,0.3,2,5,0.3,5,2,2,5,2,2,0.3,2,0.3,0.3,5,0.3,2,5,5,2,2,5,0.3,0.3,2,2,5,2,5,5,0.3,2,0.3,5,0.3,0.3,5,5,2,0.3,2,2,0.3,5,2,2,5,5,5,5,2,5,2,5,5,0.3,2,0.3,0.3,2,0.3,2,2,0.3,5,5,0.3,5,5,2,5,2,5,0.3,0.3,0.3,2,0.3,0.3,0.3,5,0.3,0.3,0.3,2,5,2,2,5,0.3,0.3,2,5,2,5,0.3,2,2,5,0.3,5,5,2,2,0.3,2,5,5,5,2,5,0.3]
ProbeType2 = []#2,0,0,0,1,2,2,2,0,1,1,1,0,2,2,2,0,0,1,0,0,0,2,0,2,0,0,1,0,0,1,2,0,0,0,2,0,0,2,2,1,0,0,2,1,1,0,0,0,2,0,0,0,1,1,2,0,2,0,2,0,0,2,0,0,0,0,0,0,2,1,2,0,1,0,2,0,0,0,2,0,1,1,0,0,1,1,2,1,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,0,1,1,0,1,0,1,2,0,0,1,0,1,0,0,0,2,2,0,0,0,0,2,2,2,2,2,1,2,2,1,0,0,2,0,1,0,1,0,2,0,0,2,0,2,1,0,2,2,0,0,0,0,2,1,0,0,0,2,1,0,1,0,0,2,0,0,0,0,0,2,2,2,0,1,2,2,2,2,0,0,1,0,1,2,0,1,2,0,1,0,2,1,2,2,1,2,2,1,2,2,2,1,0,0,0,0,0,0,2,1,2,1,2,0,0,1,1,1,1,1,2,2,1,1,1,2,0,0,1,0,1,2,0,1,0,2,2,1,0,0,2,2,0,0,1,0,1,0,0,2,2,0,1,0,0,0,1,0,0,2,2,0,2,2,0,0,1,1,0,1,1,0,1,0,0,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,1,2,1,1,0,1,1,1,0,1,0,0,1,1,0,0,2,1,0,1,0,0,0,0,1,2,1,0,2,0,1,1,2,2,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,2,0,0,2,0,2,1,0,0,2,0,0,1,0,0,1,1,2,0,1,2,2,0,0,2,0,2,1,0,0,2,0,1,0,2,1,0,2,0,0,1,1,0,2,0,0,1,0,0,0,2,2,2,2,2,1,0,2,0,2,0,2,1,0,1,1,1,1,1,1,0,2,0,1,2,0,0,2,2,1,2,0,2,0,0,1,1,0,0,2,0,0,0,0,0,0,1,1,0,2,0,0,2,1,0,0,0,2,1,0,0,1,1,0,0,0,1,2,0,2,0,0,2,0,2,0,2,0,0,0,0,1,2,1,2,2,2,1,0,2,2,0,1,0,0,0,1,1,0,0,0,0,0,2,0,0,0,0,1,1,0,2,0,2,1,2,0,2,2,0,1,0,2,0,1,0,0,1,2,2,0,2,0,1,0,0,0,2,0,1,2,0,1,1,0,2,1,0,0,0,2,2,1,1,0,0,2,0,2,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,2,0,2,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,2,2,2,2,2,1,1,2,0,1,2,0,0,0,0,2,0,2,0,0,0,0,2,2,0,2,0,0,0,1,1,1,2,0,2,1,0,1,0,0,1,0,1,1,1,0,2,1,2,1,0,0,1,0,0,2,2,0,0,0,0,2,2,1,2,1,0,1,0,2,0,2,1,2,0,1,0,0,1,0,0,0,1,2,0,2,1,0,1,0,2,2,0,0,0,0,0,1,2,0,0,0,0,1,0,2,0,0,0,0,0,1,0,1,0,2,0,1,2,2,0,0,0,2,0,2,0,2,0,2,0,0,1,1,2,0,2,1,2,2,1,0,1,0,1,0,0,0,2,1,0,2,1,0,2,0,2,0,0,1,0,1,1,1,1,0,0,2,1,2,1,0,2,1,0,0,1,2,1,2,0,0,0,0,1,2,2,0,0,2,0,1,1,2,2,0,0,1,1,0,0,0,2,2,0,2,2,1,0,0,0,0,0,2,0,0,2,0,0,0,1,0,2,0,0,2,1,1,0,0,2,0,0,0,2,0,0,1,0,1,2,0,0,0,1,2,0,0,0,0,0,0,2,0,2,1,0,0,0,2,0,0,2,0,0,0,2,0,0,1,0,1,0,0,2,0,0,0,2,1,0,1,0,1,1,0,0,1,1,2,0,1,0,2,2,0,2,2,2,2,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0,0,1,0,0,1,0,0,0,0,2,2,0,0,1,0,0,1,1,1,1,0,1,1,1,2,1,2,1,0,1,0,0,2,1,2,2,0,2,1,1,0,0,1,0,0,0,0,1,2,2,2,2,2,2,2,0,0,2,1,2,0,1,1,1,2,0,0,0,1,0,0,0,2,2,2,2,0,1,2,2,0,1,0,0,0,1,2,0,2,2,1,2,0,1,1,0,0,0,0,2,2,1,0,0,2,0,0,2,0,2,1,1,1,1,1,0,2,1,0,2,0,1,1,0,0,2,0,1,1,0,2,0,2,1,0,2,2,1,0,0,0,2,1,1,2,0,2,1,1,0,2,2,2,0,0,1,0,0,1,2,2,2,2,0,2,0,0,0,2,0,2,1,1,0,0,1,0,0,0,1,0,0,0,0,2,0,0,0,2,0,0,1,0,0,0,1,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,1,2,1,0,1,2,0,1,0,0,2,0,2,1,2,0,0,1,0,2,0,0,1,1,0,0,2,1,2,2,0,0,0,2,2,1,2,0,2,0,1,1,1,1,2,0,2,0,2,1,1,0,0,0,0,0,0,0,1,2,0,0,0,0,0,1,0,2,1,2,0,1,0,2,1,0,2,0,0,0,0,0,2,0,0,1,1,1,0,1,0,0,2,1,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,2,0,1,0,1,0,2,1,0,0,0,2,0,1,0,0,1,0,0,0,0,1,1,2,0,0,1,1,0,0,0,0,1,0,2,0,2,0,2,1,0,0,0,0,0,0,0,0,2,2,1,1,0,1,0,2,0,1,0,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,1,2,0,0,2,1,2,0,1,0,0,1,1,0,1,0,2,1,0,0,0,0,2,2,0,0,0,0,1,0,0,0,0,1,2,1,0,0,1,1,2,0,0,0,2,1,0,0,0,0,2,0,1,2,2,2,0,0,1,1,0,1,1,0,1,2,0,0,0,0,0,0,2,2,1,2,2,1,0,1,0,2,1,0,2,0,0,0,0,2,2,2,1,0,1,2,0,0,1,0,0,0,2,2,0,0,2,0,1,0,0,0,1,2,2,0,0,1,0,2,1,2,0,1,0,1,0,1,1,2,0,1,0,0,2,2,0,2,2,1,0,1,2,0,0,1,0,2,2,1,1,0,2,0,2,0,1,0,0,0,1,0,0,2,0,2,0,0,0,2,2,0,0,0,1,0,0,0,2,1,0,0,2,0,0,0,2,2,0,2,0,0,1,2,0,1,2,2,0,2,1,0,0,0,1,0,0,1,0,0,0,0,0,0,2,0,1,1,0,1,1,0,1,2,0,2,0,0,0,0,2,0,2,0,0,0,2,2,2,2,0,2,2,2,0,2,2,1,0,0,2,2,0,0,2,0,2,1,1,1,1,2,0,0,1,0,2,0,0,0,0,2,1,0,0,2,1,1,0,0,2,1,0,2,2,2,2,1,1,0,0,2,0,2,0,0,2,0,2,1,2,0,1,0,2,0,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,1,0,1,0,1,1,0,0,0,1,0,2,0,1,0,0,1,0,1,0,0,1,1,2,0,1,0,2,1,0,1,0,0,2,1,2,0,2,2,0,1,1,0,0,2,1,0,2,1,0,2,0,2,0,0,1,0,2,2,1,1,2,0,1,2,0,0,1,0,0,0,1,0,0,2,0,2,2,0,2,0,0,1,0,2,1,2,1,1,0,1,0,1,2,0,0,1,2,0,1,2,0,1,2,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,2,1,2,1,0,0,2,2,1,0,1,0,0,0,0,2,0,1,0,1,0,0,1,0,0,1,1,0,1,0,1,2,2,2,2,1,1,0,1,2,2,0,0,2,0,2,1,2,2,0,0,0,2,2,1,1,0,0,0,0,0,1,0,2,2,2,2,1,2,1,2,1,0,0,2,0,2,1,0,0,1,0,0,0,2,0,2,2,0,0,2,0,2,2,1,0,0,2,1,0,1,0,0,0,1,0,2,2,1,0,2,2,0,0,0,0,1,1,2,1,0,0,0,1,1,1,2,1,1,0,0,0,1,2,0,0,0,0,0,0,0,2,0,1,0,1,0,0,2,0,1,0,2,2,1,0,1,1,1,2,2,0,0,1,1,1,0,2,0,2,0,1,0,0,0,0,1,2,0,2,1,0,2,1,0,0,1,1,2,2,0,2,2,0,0,0,2,0,2,1,1,2,0,0,1,0,0,2,2,1,2,1,1,1,0,0,1,0,0,2,2,2,0,0,1,0,1,1,1,2,0,1,1,0,0,1,2,0,2,0,0,0,1,1,2,2,1,2,2,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,2,1,2,0,1,0,1,0,0,2,0,2,0,1,2,0,2,0,0,0,1,0,0,0,0,0,2,1,1,0,0,2,0,0,2,0,1,2,2,0,1,0,0,2,0,0,0,1,2,0,0,1,0,2,2,2,0,1,0,1,1,1,0,0,1,0,1,2,2,2,0,0,0,0,1,1,2,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,2,0,0,0,0,2,2,0,2,1,2,2,0,2,0,1,0,1,0,0,1,2,0,2,0,0,0,2,0,2,1,2,0,0,0,2,0,0,0,1,0,0,1,1,0,1,1,2,0,0,2,2,0,0,0,1,0,1,0,0,2,1,2,0,1,0,0,2,2,2,0,0,0,0,1,0,0,2,1,2,1,0,0,0,2,0,0,0,0,2,1,1,2,2,0,1,0,1,2,2,2,2,2,0,0,2,2,0,2,0,0,0,1,0,0,1,2,1,1,0,0,1,2,0,1,2,2,0,0,1,0,0,0,0,0,0,2,0,0,1,2,2,1]
CSI = []#0.3,0.3,5,2,5,2,0.3,0.3,5,0.3,0.3,5,5,0.3,0.3,2,2,0.3,0.3,2,0.3,5,0.3,5,5,2,0.3,0.3,0.3,2,2,0.3,0.3,5,2,2,5,0.3,5,0.3,2,2,5,0.3,5,5,5,5,5,2,2,0.3,0.3,2,5,2,5,2,0.3,5,2,5,0.3,0.3,0.3,2,5,0.3,5,5,5,0.3,2,2,0.3,2,5,0.3,2,5,0.3,2,5,2,0.3,5,2,2,2,5,0.3,5,0.3,0.3,2,2,5,0.3,0.3,5,0.3,0.3,2,0.3,5,5,2,2,0.3,2,0.3,2,5,5,2,0.3,2,5,5,0.3,2,0.3,0.3,0.3,2,2,5,0.3,0.3,0.3,2,0.3,5,0.3,5,0.3,5,5,0.3,2,5,5,0.3,0.3,5,2,2,2,5,0.3,0.3,2,2,2,5,5,5,5,2,5,0.3,0.3,0.3,5,2,5,5,2,5,0.3,5,0.3,2,5,0.3,2,0.3,5,0.3,5,2,0.3,2,5,2,5,5,2,0.3,2,0.3,2,2,5,2,2,0.3,5,5,5,0.3,2,2,0.3,0.3,2,0.3,5,2,5,5,0.3,5,2,0.3,0.3,5,5,0.3,5,2,2,5,0.3,2,0.3,0.3,5,0.3,5,2,2,5,2,2,2,2,0.3,5,0.3,0.3,2,2,2,2,5,2,2,2,0.3,0.3,0.3,0.3,0.3,0.3,5,2,2,2,0.3,5,5,2,2,5,0.3,2,0.3,0.3,0.3,5,5,0.3,5,5,5,5,5,0.3,5,0.3,0.3,0.3,2,0.3,0.3,0.3,2,0.3,5,5,0.3,5,2,2,5,0.3,2,2,5,0.3,0.3,5,5,0.3,5,2,2,2,5,5,2,0.3,5,2,2,5,5,0.3,0.3,5,2,2,2,2,0.3,0.3,5,2,2,5,0.3,0.3,0.3,5,5,5,2,0.3,0.3,2,2,5,5,2,2,2,0.3,5,2,2,0.3,5,0.3,5,2,0.3,5,2,5,2,5,0.3,5,0.3,2,2,0.3,5,0.3,0.3,2,0.3,2,2,0.3,2,2,2,0.3,0.3,0.3,2,0.3,0.3,0.3,2,5,5,2,5,0.3,5,2,0.3,0.3,2,2,5,2,5,5,5,0.3,2,0.3,0.3,0.3,2,0.3,5,2,0.3,0.3,2,0.3,5,0.3,2,2,5,0.3,5,5,2,2,0.3,5,2,2,5,0.3,5,5,2,5,0.3,0.3,0.3,2,0.3,0.3,5,2,2,5,0.3,0.3,0.3,2,5,2,0.3,2,0.3,5,0.3,5,0.3,0.3,5,2,5,5,2,5,5,2,5,0.3,2,5,0.3,5,5,5,5,0.3,2,0.3,2,5,0.3,5,2,2,2,5,0.3,0.3,5,5,2,2,2,2,5,0.3,5,5,5,0.3,2,2,0.3,5,5,5,2,2,2,0.3,0.3,5,0.3,0.3,0.3,5,0.3,2,2,0.3,0.3,5,2,2,0.3,5,5,0.3,5,5,5,2,0.3,2,0.3,2,5,0.3,5,0.3,0.3,2,0.3,0.3,2,0.3,2,2,2,0.3,0.3,2,2,2,2,2,2,5,2,0.3,0.3,0.3,2,5,5,5,2,0.3,0.3,5,5,5,2,2,2,5,0.3,0.3,5,0.3,5,2,5,0.3,5,5,2,0.3,2,5,0.3,2,5,0.3,0.3,5,0.3,0.3,0.3,0.3,5,2,2,2,0.3,2,0.3,0.3,2,5,0.3,2,0.3,0.3,0.3,5,2,2,5,2,2,5,0.3,2,0.3,2,2,0.3,0.3,2,5,2,2,0.3,0.3,2,2,2,0.3,2,5,5,0.3,2,5,2,0.3,0.3,5,2,5,0.3,2,5,2,5,2,5,2,2,0.3,5,2,0.3,5,2,2,5,0.3,5,5,2,0.3,5,5,2,5,2,0.3,5,2,2,2,0.3,2,0.3,2,0.3,2,5,0.3,5,2,2,0.3,0.3,5,2,2,0.3,5,2,0.3,5,2,2,5,5,5,5,5,0.3,0.3,2,2,2,2,5,0.3,5,0.3,5,5,2,2,5,2,0.3,2,0.3,2,5,0.3,0.3,5,2,2,0.3,0.3,5,2,5,2,5,2,5,2,5,0.3,5,0.3,2,2,2,5,5,2,0.3,5,5,0.3,2,0.3,5,5,5,5,2,0.3,2,5,5,5,5,5,5,2,2,0.3,0.3,0.3,2,0.3,2,5,0.3,5,5,2,2,2,0.3,2,2,2,0.3,0.3,2,5,0.3,0.3,0.3,5,0.3,5,0.3,2,2,5,5,5,2,0.3,5,5,0.3,2,2,5,5,5,5,5,5,0.3,2,5,5,0.3,5,2,2,0.3,5,2,0.3,5,2,2,5,5,2,0.3,5,0.3,5,2,0.3,5,2,5,5,0.3,5,2,2,0.3,5,5,2,5,0.3,5,2,5,5,0.3,2,0.3,0.3,2,5,5,5,5,5,0.3,5,2,2,2,2,0.3,0.3,0.3,5,5,0.3,2,5,5,0.3,2,0.3,5,5,0.3,2,0.3,2,5,2,5,2,0.3,2,0.3,0.3,2,5,0.3,5,5,0.3,2,2,0.3,2,5,2,2,0.3,0.3,0.3,0.3,0.3,0.3,2,2,0.3,2,5,0.3,2,2,5,0.3,0.3,0.3,5,5,5,5,2,5,2,5,0.3,5,2,5,5,0.3,5,2,0.3,0.3,0.3,5,0.3,5,0.3,0.3,0.3,0.3,0.3,5,5,0.3,5,0.3,2,0.3,0.3,2,5,5,0.3,2,5,5,0.3,5,5,5,2,5,2,5,2,0.3,2,2,2,0.3,0.3,0.3,2,2,0.3,0.3,2,0.3,0.3,0.3,2,5,2,0.3,2,0.3,5,2,0.3,0.3,5,0.3,5,5,5,2,0.3,0.3,2,0.3,0.3,0.3,0.3,2,2,5,2,2,0.3,2,2,5,0.3,2,2,2,5,2,2,5,5,5,0.3,2,5,5,0.3,0.3,2,0.3,5,0.3,0.3,5,0.3,0.3,2,0.3,5,2,5,5,0.3,2,0.3,2,5,2,0.3,0.3,2,5,0.3,5,2,5,5,2,0.3,2,5,5,0.3,0.3,5,2,5,2,2,0.3,5,5,0.3,5,5,2,5,5,0.3,2,0.3,0.3,5,2,5,2,0.3,0.3,5,2,5,2,5,2,5,2,2,2,0.3,0.3,0.3,5,5,2,0.3,2,2,2,5,5,5,2,0.3,5,2,5,2,5,5,0.3,0.3,5,2,2,0.3,0.3,5,0.3,2,5,2,0.3,2,2,0.3,2,2,2,5,2,5,5,0.3,5,5,5,5,0.3,2,0.3,0.3,2,5,0.3,2,2,0.3,5,0.3,2,0.3,2,2,5,5,5,5,0.3,0.3,5,0.3,5,5,0.3,2,5,5,0.3,5,5,0.3,5,5,5,2,2,5,0.3,5,0.3,0.3,2,2,5,5,5,2,0.3,5,2,5,2,2,2,5,5,2,2,5,2,0.3,2,0.3,2,5,2,2,5,2,5,2,5,5,5,2,2,0.3,5,0.3,0.3,0.3,5,0.3,5,2,0.3,0.3,2,5,2,0.3,5,0.3,0.3,0.3,2,2,0.3,0.3,5,2,2,2,5,0.3,2,2,2,0.3,2,5,5,5,5,5,0.3,2,5,5,0.3,0.3,0.3,2,5,0.3,5,5,5,5,2,5,0.3,2,5,2,0.3,2,0.3,2,2,2,0.3,5,0.3,0.3,0.3,2,2,5,2,2,2,0.3,5,2,5,2,0.3,5,5,2,2,5,0.3,5,2,0.3,5,0.3,5,2,0.3,5,5,2,0.3,5,5,5,2,5,2,5,0.3,2,2,2,0.3,5,2,5,0.3,2,0.3,0.3,5,2,5,5,2,2,5,5,5,5,5,2,0.3,0.3,2,2,2,5,0.3,5,5,5,0.3,2,5,0.3,5,2,2,0.3,0.3,0.3,0.3,2,0.3,2,2,0.3,0.3,2,5,2,5,5,0.3,0.3,5,0.3,5,0.3,0.3,5,0.3,5,0.3,5,0.3,5,0.3,5,0.3,5,0.3,0.3,5,0.3,0.3,2,5,0.3,2,0.3,2,2,0.3,0.3,5,2,2,2,0.3,0.3,2,5,2,0.3,2,0.3,5,2,0.3,5,5,0.3,5,0.3,5,5,5,2,2,0.3,2,5,2,2,5,2,2,2,5,0.3,2,5,2,0.3,5,2,0.3,5,5,5,0.3,0.3,5,5,2,2,2,2,5,0.3,5,2,0.3,5,5,5,2,0.3,2,2,5,2,2,0.3,5,0.3,2,5,2,5,0.3,2,5,5,2,2,0.3,5,2,5,5,2,2,0.3,0.3,0.3,0.3,2,5,0.3,2,5,5,0.3,0.3,2,5,5,2,5,0.3,2,0.3,0.3,5,0.3,0.3,2,0.3,2,2,0.3,2,5,0.3,2,0.3,2,0.3,0.3,2,0.3,0.3,2,2,0.3,2,0.3,2,5,2,5,0.3,0.3,0.3,0.3,5,0.3,2,2,2,5,0.3,5,0.3,5,2,0.3,0.3,5,5,0.3,0.3,0.3,2,2,2,2,0.3,5,5,0.3,5,0.3,5,2,5,2,5,2,5,0.3,2,2,5,5,5,2,5,0.3,0.3,2,0.3,0.3,5,2,2,0.3,0.3,5,5,0.3,0.3,0.3,2,5,0.3,2,2,5,5,2,0.3,2,2,5,0.3,2,5,5,0.3,0.3,2,0.3,5,0.3,5,5,5,2,0.3,5,2,0.3,0.3,5,2,0.3,5,2,2,5,0.3,2,5,5,0.3,0.3,0.3,5,5,5,2,0.3,5,5,0.3,2,2,0.3,5,0.3,5,0.3,2,2,2,5,2,0.3,2,5,5,0.3,5,5,0.3,5,0.3,5,5,0.3,0.3,2,0.3,5,0.3,5,2,2,5,2,2,2,2,5,5,2,0.3,5,5,5,2,5,0.3,2,5,5,5,0.3,5,0.3,5,0.3,2,0.3,0.3,0.3,0.3,5,0.3,0.3,2,5,2,2,5,0.3,5,5,2,5,5,5,2,2,5,5,2,0.3,0.3,2,0.3,2,5,0.3,0.3,0.3,2,5,5,2,2,5,5,0.3,5,5,0.3,2,0.3,0.3,2,2,2,0.3,5,2,0.3,5,5,0.3,0.3,2,2,2,0.3,0.3,5,5,0.3,5,5,0.3,2,2,2,2,0.3,5,5,2,2,2,2,2,2,5,5,2,2,0.3,0.3,2,5,0.3,2,5,5,0.3,2,2,0.3,5,0.3,2,0.3,5,5,2,0.3,0.3,0.3,5,5,0.3,0.3,0.3,5,2,5,5,0.3,2,0.3,2,2,0.3,5,0.3,0.3,5,5,2,0.3,5,2,0.3,5,2,2,0.3,0.3,0.3,5,5,5,2,2,0.3,2,0.3,0.3,0.3,0.3,0.3,2,2,5,5,2,0.3,5,5,0.3,0.3,5,0.3,5,5,2,0.3,5,2,0.3,5,2,2,2,0.3,5,2,5,5,2,2,0.3,2,0.3,2,0.3,2,2,2,5,5,5,5,2,0.3,5,0.3,2,2,2,2,2,5,5,5,0.3,5,5,0.3,5,5,0.3,0.3,0.3,2,2,0.3,0.3,5,5,0.3,2,2,0.3,2,5,2,2,2,2,2,5,2,0.3,5,0.3,0.3,0.3,5,5,2,5,5,0.3,2,2,0.3,0.3,5,5,5,5,2,5,5,0.3,0.3,2,5,0.3,2,2,5,5,2,5,0.3,0.3,2,0.3,2,5,5,5,5,2,5,2,0.3,0.3,2,0.3,5,2,0.3,5,2,2,2,0.3,2,5,2,2,5,0.3,0.3,2,2,0.3,2,5,0.3,0.3,0.3,0.3,0.3,5,2,5,2,0.3,2,0.3,5,2,2,5,2,5,5,2,5,0.3,2,5,2,0.3,0.3,5,0.3,5,2,2,0.3,0.3,2,0.3,2,5,0.3,0.3,2,2,0.3,0.3,2,0.3,2,0.3,2,0.3,0.3,2,0.3,2,0.3,0.3,0.3,0.3,2,0.3,2,5,2,2,2,2,2,0.3,0.3,2,0.3,5,0.3,5,5,5,5,2,0.3,2,0.3,5,5,5,2,2,0.3,5,5,2,2,2,0.3,5,2,2,0.3,0.3,0.3,2,0.3,0.3,2,2,0.3,2,2,0.3,2,2,5,0.3,0.3,2,0.3,5,2,5,0.3,0.3,0.3,0.3,0.3,0.3,0.3,2,0.3,0.3,2,5,2,0.3,2,5,5,5,2,2,2,0.3,5,5,0.3,0.3,2,0.3,0.3,2,2,0.3,0.3,2,2,0.3,2,5,0.3,2,0.3,5,0.3,2,0.3,0.3,2,5,5,2,5,0.3,0.3,5,5,0.3,5,5,0.3,2,5,0.3,2,5,0.3,0.3,0.3,2,5,5,5,5,5,5,2,2,5,0.3,5,2,0.3,5,5,5,0.3,5,2,2,2,0.3,2,0.3,0.3,5,2,5,5,2,0.3,0.3,0.3,2,5,5,5,5,5,0.3,5,5,0.3,0.3,2,0.3,5,2,0.3,5,2,0.3,0.3,2,5,0.3,2]
cue_order = []#1,0,1,1,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,1,0,0,1,1,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,1,0,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,1,0,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,0,1,0,1,1,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,1,1,0,0,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,1,1,0,0,1,0,0,0,1,0,0,1,1,0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,0,0,1,1,0,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,1,1,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,1,0,1,1,0,0,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,1,0,1,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,0,0,1,1,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,1,0,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,0,0,0,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,1,1,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,0,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,1,1,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,1,0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,1,1,1,1,0,0,1,1,1,0,0]
cueorder = []
thisN = []
thisIndex = []
col_a = []  # col_a -> top 4 squares
color = []
col_b = []  # col_b -> down 4 squares
ups = []  # top 4 positions
pos = []  # all position
downs = []  # down 4 position
cat1 = []
cat2 = []
FEEDBACK = []
f = ['#deb887', '#ff8c00', '#006666', '#6b8e23', '#008080']
ProbeType = []#1,0,1,0,0,2,1,1,0,0,0,1,2,0,2,0,0,0,2,0,2,0,2,0,1,2,0,0,0,0,0,1,1,2,0,1,2,0,0,0,2,1,0,0,0,2,0,1,0,1,1,2,0,0,0,0,0,1,1,0,1,2,2,0,2,2,2,1,0,0,0,2,1,0,0,0,2,1,2,2,1,0,0,0,0,0,1,0,1,0,2,1,1,0,2,0,2,1,0,0,1,0,0,0,2,0,1,0,0,0,1,0,2,0,0,0,0,0,0,0,1,0,1,2,2,0,0,0,2,0,0,0,1,1,0,2,0,0,1,0,0,1,0,0,0,0,0,0,1,2,2,1,0,1,0,1,0,2,2,0,0,0,0,2,0,2,1,0,0,0,2,0,0,0,0,2,1,1,0,0,1,0,0,0,2,2,0,0,0,0,2,0,0,0,1,1,0,2,1,2,0,2,2,1,0,2,1,1,2,0,0,0,2,0,1,1,2,0,0,2,2,2,0,0,1,0,2,0,1,0,2,1,2,2,0,2,0,0,2,0,0,0,2,1,1,0,0,0,1,2,2,2,0,0,2,0,1,2,0,0,0,1,0,0,0,0,1,0,0,1,2,0,0,1,0,2,0,2,2,2,0,1,1,0,0,1,1,0,1,0,2,0,1,1,1,1,0,1,1,0,0,2,0,1,1,0,0,2,0,0,0,0,0,2,0,0,1,1,1,0,0,0,1,0,0,2,2,1,1,1,0,0,0,0,2,0,1,0,0,2,0,1,0,2,2,1,0,0,1,0,2,2,0,1,1,1,0,1,2,0,0,0,0,2,1,0,0,0,1,1,0,0,0,0,2,0,0,2,1,0,2,0,2,0,2,2,1,2,1,1,0,0,0,1,0,0,1,0,1,2,1,0,1,1,2,0,0,0,0,0,2,0,2,1,0,1,2,0,0,0,0,2,0,2,0,0,0,1,0,2,0,1,0,1,0,0,0,0,1,0,2,0,2,0,0,0,0,2,1,1,1,2,0,0,0,2,2,0,2,0,1,0,2,0,1,1,0,1,0,0,2,2,0,0,2,0,0,1,0,2,0,1,1,0,1,2,2,0,2,2,0,0,0,2,0,0,2,0,0,2,2,1,0,2,0,0,0,1,1,0,1,1,1,0,0,0,1,1,0,1,0,0,0,2,0,2,0,0,0,0,2,0,0,0,2,0,0,1,2,2,2,0,2,0,1,1,0,2,2,1,1,2,1,2,2,2,0,1,0,0,1,1,0,2,0,2,1,0,0,0,2,0,0,0,1,0,2,2,0,0,1,0,1,0,0,1,1,0,2,0,0,1,1,0,2,2,0,2,2,2,0,2,0,0,1,0,0,0,0,2,2,1,1,0,0,2,1,1,0,1,0,0,2,0,1,1,0,2,1,2,0,2,1,1,0,0,1,1,2,1,1,2,0,2,1,2,0,1,1,2,1,2,0,1,0,2,2,2,2,1,0,0,2,2,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,1,0,2,2,0,1,1,2,0,0,0,0,1,0,0,1,0,0,2,1,2,0,0,0,1,2,0,2,2,0,2,2,1,0,2,0,0,2,0,0,1,2,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,2,2,0,0,0,2,0,2,0,0,2,2,2,0,1,2,0,0,2,2,0,2,1,2,0,0,0,0,0,1,0,0,2,2,0,1,1,0,2,1,1,0,0,1,1,1,2,0,0,0,0,2,2,1,1,0,1,2,1,1,2,0,0,1,1,1,0,2,0,1,0,0,1,0,1,2,1,2,1,1,2,1,1,0,2,0,1,0,0,0,1,1,1,2,2,1,2,2,2,0,0,0,0,0,1,1,0,0,0,0,0,1,2,0,2,2,0,0,2,2,1,2,0,1,2,2,0,1,0,0,0,0,0,0,2,0,0,0,0,0,2,1,2,1,1,2,0,1,0,0,0,0,2,0,2,0,0,2,1,0,0,1,0,1,0,2,1,2,0,2,0,2,0,0,1,1,0,0,2,0,0,2,2,0,2,2,2,2,1,1,0,0,0,1,2,1,0,0,1,0,0,2,1,0,0,0,1,0,2,0,0,2,0,1,1,1,1,2,1,1,0,1,1,0,2,0,1,1,2,2,0,0,2,0,0,1,2,2,1,0,2,0,1,1,0,2,2,2,1,2,0,2,1,0,2,2,2,0,0,1,0,0,2,2,0,0,2,1,1,0,2,2,2,1,0,1,0,0,0,2,2,0,0,1,1,0,0,0,2,0,2,0,0,0,2,2,1,1,0,0,1,0,0,2,2,2,0,1,0,1,0,2,0,0,1,2,0,0,0,0,2,0,1,1,0,0,0,0,0,1,2,0,0,0,0,2,0,0,2,0,1,2,0,0,2,0,1,1,1,2,0,0,0,1,0,0,0,0,2,1,0,0,0,0,0,1,1,1,1,0,2,0,0,2,0,1,0,1,1,1,2,0,0,2,0,2,0,1,1,0,2,0,0,1,1,1,1,0,1,2,0,0,1,0,0,0,1,1,2,0,0,0,1,0,2,0,0,1,1,1,0,2,0,1,2,0,1,2,1,0,0,1,2,0,0,1,1,2,2,0,1,2,0,1,2,0,2,0,2,0,1,0,0,2,0,1,2,0,0,1,1,0,0,1,1,0,0,0,2,1,2,0,2,1,2,2,0,2,2,0,0,0,0,0,1,0,0,1,2,0,0,1,0,0,0,0,0,2,0,0,1,1,1,0,1,0,1,0,0,1,2,1,0,1,0,0,1,0,1,2,2,0,0,1,1,0,2,2,0,1,0,0,2,2,0,2,0,0,1,0,0,0,2,0,1,0,0,1,0,1,2,0,1,2,1,1,0,1,0,2,0,1,1,0,2,0,2,1,0,0,2,0,1,1,1,2,0,1,0,2,2,1,0,2,0,2,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,1,1,0,0,1,0,2,0,2,0,1,0,2,2,0,2,0,2,2,0,0,1,0,2,1,0,2,0,2,1,0,0,1,0,2,1,0,0,1,0,2,2,1,1,0,0,0,1,0,1,0,1,2,1,2,0,2,0,0,1,0,1,1,1,1,2,0,0,0,0,1,1,1,1,0,0,0,0,2,1,0,1,2,0,0,1,0,2,1,2,2,1,0,1,1,2,0,0,2,0,2,1,0,2,0,0,0,2,0,2,0,1,0,2,1,0,0,1,0,2,2,0,0,0,0,2,0,2,0,0,1,0,0,0,1,0,1,2,1,2,1,0,0,1,0,0,2,2,1,2,0,1,0,0,0,0,0,0,2,0,1,2,0,0,1,1,0,0,0,0,2,1,1,1,2,0,2,0,0,2,0,0,2,0,0,0,0,1,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,0,2,1,0,0,0,1,0,0,0,2,0,1,0,1,2,0,0,1,0,0,1,1,1,1,2,0,1,0,0,0,0,0,1,2,2,1,2,1,0,1,0,2,0,2,1,0,0,0,2,1,0,0,2,0,0,2,1,1,0,2,0,0,1,0,2,2,0,0,2,2,0,0,0,2,1,2,2,0,0,0,0,0,0,2,0,0,2,0,1,2,1,0,1,2,0,0,1,2,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,1,2,1,2,0,2,0,2,2,2,2,0,0,1,0,0,1,1,0,0,2,2,1,1,0,0,0,0,1,2,2,0,0,2,1,0,2,1,0,2,0,0,0,0,2,2,0,0,2,2,0,0,1,2,0,2,0,0,0,1,2,0,1,2,2,0,0,0,2,1,0,0,2,0,2,0,0,0,2,1,0,2,1,0,2,2,0,0,2,2,2,1,0,0,0,0,1,0,2,1,0,0,1,0,1,2,0,0,0,0,2,2,0,2,0,1,0,2,0,0,1,1,0,0,0,1,0,1,1,0,0,0,0,1,2,0,0,0,2,1,2,1,1,2,2,1,1,1,2,0,2,2,0,1,2,0,2,0,0,0,1,0,1,0,0,1,2,2,2,0,0,0,0,2,0,2,0,1,0,1,0,0,2,0,1,1,0,2,0,0,0,1,2,1,2,0,1,0,0,1,0,0,0,1,0,1,2,2,1,1,0,2,0,2,0,2,0,0,0,0,2,0,1,2,2,2,0,2,2,1,0,0,2,0,0,1,2,2,2,0,2,0,2,0,0,1,1,2,1,2,0,0,2,0,0,0,0,0,1,2,0,0,1,1,2,2,1,1,1,0,0,0,0,0,0,2,0,2,1,0,1,2,1,0,1,2,2,0,2,0,0,0,1,1,2,2,0,2,0,0,0,0,0,2,1,0,2,0,0,0,2,2,0,0,2,1,1,0,0,2,1,2,1,2,2,0,0,2,0,0,2,0,2,1,0,0,0,0,0,0,0,1,0,1,1,2,0,0,0,2,1,2,1,0,2,1,0,0,1,0,0,0,2,0,0,0,0,1,2,0,1,0,0,2,1,2,0,2,0,0,1,0,2,1,1,1,2,0,0,2,0,2,0,1,0,1,0,0,0,1,1,0,1,0,0,0,2,0,2,0,1,2,0,0,0,0,0,0,2,0,1,0,1,0,0,0,1,0,0,2,2,2,2,1,2,2,0,0,0,0,0,0,1,1,0,0,1,0,1,0,2,2,0,0,1,2,1,0,2,0,0,0,2,2,0,0,1,1,2,0,2,2,2,1,2,2,0,0,1,2,0,0,0,0,0,0,0,1,0,1,0,2,0,1,0,0,1,1,0,1,0,1,2,0,2,0,0,2,1,1,0,2,0,0,2,1,2,0,0,1,1,1,1,1,0,0,0,1,0,2,0,0,0,0,0,0,2,2,2,2,0,0,0,2,2,1,1,0,2,0,0,2,1,0,1,0,0,1,0,0,0,0,0,0,2,0,0,0,1,2,1,0,1,0,1,0,0,1,1,1,1,1,0,2,2,1,2,0,1,0,0,1,0,0,2,2,0,1,0,0,1,1,2,0,0,0,0,1,1,0,0,1,2,0,0,0,2,0,2,0,0,2,1,1,0,1,0,0,1,0,0,2,1,0,0,0,1,0,0,1,0,2,1,0,2,1,1]
#col_a = ['#006666','#00e673']
#color = ['#ff8000', '#800080','#006666','#00e673']
#col_b = ['#ff8000', '#800080']
#ups = [(200, 100), (-100, 200)]
#pos = [(200, 100), (-100, 200), (-200, -100), (100, -200)]
#downs = [(-200, -100), (100, -200)]
#sz = 4
#cue_order = 1
#CSI =.3
#ProbeType =0
#ProbeType2 =2
#CSI2 = 5
#cat = [cat1, cat2]
#cat1 = 0
#cat2 = 1


def drawStimulus(color, pos, downs, ups, cue_order):
    drawLearningColors(color, pos)
    drawLearningCues(downs, ups, cue_order)


def drawLearningColors(color, pos):
    squares = []
    for i in range(len(pos)):
        squ = visual.Rect(WIN, size=[100, 100], lineColor=None)
        squares.append(squ)
    for idx, squ in enumerate(squares):
        squ.setFillColor(color[idx])
        squ.setPos(pos[idx])
        squ.draw()


def drawLearningCues(downs, ups, cue_order):  # make frame need seperately $ Lin: Failed to comprehence.
    if cue_order == 0:
        drawDiamondCue(positions=downs)
        drawCircleCue(positions=ups)
    else:
        drawDiamondCue(positions=ups)
        drawCircleCue(positions=downs)


def drawDiamondCue(positions):
    diam = []
    for j in range(len(positions)):
        dim = visual.Rect(WIN, size=(170, 170), ori=45, lineWidth=3)
        diam.append(dim)
    for idx, dim in enumerate(diam):
        dim.setPos(positions[idx])
        dim.draw()


def drawCircleCue(positions):
    circle = []
    for j in range(len(positions)):
        cir = visual.Circle(WIN, radius=50, edges=40, lineWidth=3)
        circle.append(cir)
    for idx, cir in enumerate(circle):
        cir.setPos(positions[idx])
        cir.draw()


def drawTestingCue(CSI, cue):
    if cue == 0:
        cir = visual.Circle(WIN, radius=50, edges=40, lineWidth=3)
        cir.setPos([0, 0])
        cir.draw()
    elif cue == 1:
        dim = visual.Rect(WIN, size=(170, 170), ori=45, lineWidth=3)
        dim.setPos([0, 0])
        dim.draw()
    WIN.flip()
    core.wait(CSI)


def getProbeColor(col_new, cue, ProbeType, col_a, col_b):
    #print col_new
    col_positive = []
    col_intrusion = []
    display_color = []
    res = ProbeType
    if cue == 1:  # diamond circle
        col_positive = col_b
        col_intrusion = col_a
    elif cue == 0:  # circlediamond
        col_positive = col_a
        col_intrusion = col_b
    if res == 0:
        display_color = col_positive[0]
    elif res == 1:
        display_color = col_intrusion[0]
    elif res == 2:
        display_color = col_new
    return display_color


def drawProbe(ProbeType, col_new, col_a, col_b, cue):
    display_color = getProbeColor(col_new, cue, ProbeType, col_a, col_b)
    squ = visual.Rect(WIN, size=[100, 100], lineColor=None, pos=[0, 0])
    squ.setFillColor(display_color)
    squ.draw()
    WIN.flip()
    t1 = core.getTime()
    ans = event.waitKeys(keyList=['left', 'right'])
    t2 = core.getTime()
    return (ans, t2 - t1)


def get_ans(ans, res):
    if res == 0 and ans == ['left']:
        FEEDBACK_O.draw()
        FEEDBACK.append(1)
    elif res == 1 and ans == ['right']:
        FEEDBACK_O.draw()
        FEEDBACK.append(1)
    elif res == 2 and ans == ['right']:
        FEEDBACK_O.draw()
        FEEDBACK.append(1)
    elif res == 0 and ans == ['right']:
        FEEDBACK_X.draw()
        FEEDBACK.append(0)
    elif res == 1 and ans == ['left']:
        FEEDBACK_X.draw()
        FEEDBACK.append(0)
    elif res == 2 and ans == ['left']:
        FEEDBACK_X.draw()
        FEEDBACK.append(0)
    elif ans == ['left''right'] and ans == ['right''left']:
        FEEDBACK.append('p')
    return FEEDBACK

def setcol():#trials = data.TrialHandler(stimList,1,method='random',dataTypes=['CSI', 'CSI2', 'ProbeType', 'ProbeType2', 'display_color', 'cue_order', 'pos', 'ans', 'feedback','col_a', 'col_b', 'rt'])
    szs = [2, 3, 1, 1, 4, 3, 1, 1, 2, 3, 2, 3, 3, 4, 1, 1, 3, 2, 4, 1, 2, 2, 3, 4, 1, 4, 3, 1, 1, 2, 3, 1, 3, 2, 4, 1,
           1, 2, 3, 1, 3, 2, 4, 3, 4, 2, 4, 4, 4, 4, 1, 1, 3, 2, 3, 1, 1, 2, 1, 3, 4, 3, 1, 2, 4, 3, 4, 2, 3, 4, 2, 4,
           4, 1, 3, 2, 4, 1, 2, 4, 4, 3, 1, 3, 3, 3, 4, 3, 2, 1, 2, 4, 3, 2, 2, 2, 3, 2, 4, 4, 1, 1, 2, 3, 4, 4, 3, 1,
           3, 1, 2, 1, 4, 1, 2, 3, 2, 4, 4, 4, 3, 2, 3, 3, 4, 1, 2, 2, 1, 4, 3, 2, 2, 1, 1, 4, 3, 4, 4, 1, 2, 3, 1, 4]
    C = ['#00E673', '#ff8000', '#800080', '#006400', '#8b4513', '#ffb6c1', '#deb887', '#ff8c00', '#006666', '#6b8e23',
         '#008080']

    COLORS = ['#00E673', '#ff8000', '#800080', '#006400', '#8b4513', '#ffb6c1', '#deb887', '#ff8c00', '#006666',
              '#6b8e23', '#008080']
    g = ['#00E673', '#ff8000', '#800080', '#006400', '#8b4513', '#ffb6c1']
    f = ['#deb887', '#ff8c00', '#006666', '#6b8e23', '#008080']
    p1 = '(100, 200)'
    p2 = '(-100, 200)'
    p3 = '(-200, 100)'
    p4 = '(200, 100)'
    p5 = '(200, -100)'
    p6 = '(100, -200)'
    p7 = '(-200, -100)'
    p8 = '(-100, -200)'
    a = (p1, p2, p3, p4)
    b = (p5, p6, p7, p8)
    for i in range(2):
        for sz in szs:
            col_b = ','.join(sample(f, sz))
            col_a = ','.join(sample(g, sz))
            color = col_a, col_b
            ups = sample(a, sz)
            downs = sample(b, sz)
            pos= ups, downs
            new = list(set(COLORS) - set(color))
            col_new = new[0]
#            print type(col_a)
            return pos, ups, downs, col_a, col_b, color, col_new

#end of component


def showInstr():  # show instruction on screen
    instr.draw()
    WIN.flip()
    event.waitKeys(keyList=['space'])


def learningPhase(color, pos, downs, ups, cue_order):
    drawStimulus(color, pos, downs, ups, cue_order)
    WIN.flip()
    core.wait(5)


def recognitionPhase(CSI, cue, ProbeType, col_a, col_b, col_new):
    drawTestingCue(CSI, cue)
    display_color = getProbeColor(col_new, cue, ProbeType, col_a, col_b)
    (ans, rt) = drawProbe(ProbeType, col_new, col_a, col_b, cue)
    get_ans(ans, res=ProbeType)
    WIN.flip()
    core.wait(.8)
    FEEDBACK.pop()
    return ans, rt


def testingPhase(CSI, cat1, ProbeType, CSI2, cat2, ProbeType2, color, col_a, col_b, col_new):
    ans = recognitionPhase(CSI, cat1, ProbeType, col_a, col_b, col_new)
    ans = recognitionPhase(CSI2, cat2, ProbeType2, col_a, col_b, col_new)


# main function reacting to the response of the subject
def process(downs, ups, color, cueorder, CSI, ProbeType, ProbeType2, CSI2, col_a, col_b, pos, cat1, cat2, thisIndex,
            COLORS):
    learningPhase(color, pos, downs, ups, cue_order)
    core.wait(5)  # wait for 5000ms and erase them all
    testingPhase(CSI, cat1, ProbeType, CSI2, cat2, ProbeType2, color, col_a, col_b, COLORS)
    print thisIndex


# process(downs, ups, color, cue_order, CSI, ProbeType, ProbeType2, CSI2, col_a, col_b, pos, cat1, cat2, thisIndex, COLORS)

def main():

# Experiment Section, use experiment variables here
    trials = data.TrialHandler(stimList,1,method='random',dataTypes=['CSI', 'CSI2', 'ProbeType', 'ProbeType2', 'display_color', 'cue_order', 'pos', 'ans', 'feedback','col_a', 'col_b', 'rt'])
    COLORS = ['#00E673', '#ff8000', '#800080', '#006400', '#8b4513', '#ffb6c1', '#deb887', '#ff8c00', '#006666',
              '#6b8e23', '#008080']
    setcol()
    process(downs, ups, color, cueorder, CSI, ProbeType, ProbeType2, CSI2, col_a, col_b, pos, cat1, cat2,thisIndex,COLORS)
    phase.draw()
    WIN.flip()
    event.waitKeys(keyList=['space'])
    #    trials.addData('sz', sz) 
#    trials.addData('ProbeType', stimList['ProbeType'])
#    trials.addData('CSI', stimList['CSI'])
#    trials.addData('ProbeType2', stimList['ProbeType2'])
#    trials.addData('CSI2', stimList['CSI2'])
#    trials.addData('cue_order', stimList['cue_order'])
    trials.addData('rt1', rt1)
#    trials.addData('cat1', stimList['cat1'])
#    trials.addData('cat2', stim['cat2'])
    trials.addData('col_a', col_a)
    trials.addData('col_b', col_b)
    trials.addData('color', color)
    trials.addData('pos', pos)
    trials.addData('ups', ups)
    trials.addData('downs', downs)
    trials.addData('rt2', rt2)
    #    print( "color = {}, col_a = {}, col_b = {}, pos = {}, ups ={}, downs ={}".format(color[i], col_a[i], col_b[i], pos[i],ups[i], downs[i]))
    #    print("sz = {} , ProbeType = {}, CSI = {}, ProbeType2 ={}, CSI2 ={}, cue_order = {}, thisIndex={}".format(sz[i],
    #        ProbeType[i], CSI[i], ProbeType2[i], CSI2[i], cue_order[i],thisIndex[i]))

    exp.addLoop(trials)
    #    instr.draw()
    #    WIN.flip()
    #    rounds = 80
    #    for i in range(rounds):
    #        process(downs, ups, color, cue_order, CSI, ProbeType, ProbeType2, CSI2, col_a, col_b, pos, cat1, cat2, thisIndex, COLORS)
    #    BLOCKBREAK.draw()
    #    WIN.flip()
    #    event.waitKeys(keyList=['space'])
    #
    #    rounds = 80
    #    for i in range(rounds):
    #        process(downs, ups, color, cue_order, CSI, ProbeType, ProbeType2, CSI2, col_a, col_b, pos, cat1, cat2, thisIndex, COLORS)
    #    HALF.draw()
    #    WIN.flip()
    #    event.waitKeys(keyList=['space'])
main()
